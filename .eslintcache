[{"/home/p/Documents/GoStack/Redux/my-app/src/components/Catalog.style.ts":"1","/home/p/Documents/GoStack/Redux/my-app/src/components/Catalog.tsx":"2","/home/p/Documents/GoStack/Redux/my-app/src/services/api.ts":"3"},{"size":1166,"mtime":1612126661606,"results":"4","hashOfConfig":"5"},{"size":915,"mtime":1612127346965,"results":"6","hashOfConfig":"5"},{"size":115,"mtime":1612120524242,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m533kg",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/p/Documents/GoStack/Redux/my-app/src/components/Catalog.style.ts",[],"/home/p/Documents/GoStack/Redux/my-app/src/components/Catalog.tsx",["15","16"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport api from '../services/api';\nimport { IProduct } from '../store/modules/cart/types';\nimport { CoreApp } from './Catalog.style';\n\n\nconst Catalog: React.FC = () => {\n const [catalog, setCatalog] = useState<IProduct[]>([]);\n\n useEffect(()=>{\n   api.get('products').then(response =>{\n     setCatalog(response.data);\n   })\n },[]) \n\n  return ( \n    <CoreApp>\n          <h2>Cata\n            <span>log</span></h2>\n          <section>\n          \n      {catalog.map(product => (\n        <article key={product.id}>\n          <strong>{product.title}</strong>\n          <span>R$ {product.price.toFixed(2).toString().replace('.', ',')}</span>\n          <img src={product.src}/>\n          <button type=\"button\">Comprar</button>\n        </article>\n        \n      ))}\n      </section>\n    </CoreApp>\n  );\n}\n\nexport default Catalog;","/home/p/Documents/GoStack/Redux/my-app/src/services/api.ts",[],{"ruleId":"17","severity":1,"message":"18","line":2,"column":10,"nodeType":"19","messageId":"20","endLine":2,"endColumn":21},{"ruleId":"21","severity":1,"message":"22","line":27,"column":11,"nodeType":"23","endLine":27,"endColumn":35},"@typescript-eslint/no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]